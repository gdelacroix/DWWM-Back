<?php class global_attr{public $accesskey;public $contenteditable;public $contextmenu;public $draggable;public $hidden;public $spellcheck;public $tabindex;public $title;public $dropzone;const HIDDEN = ' hidden="hidden"';
function __construct( $accesskey=NULL, $contenteditable=NULL, $contextmenu=NULL,$draggable=NULL, $hidden=NULL, $spellcheck=NULL, $tabindex=NULL,$title=NULL, $dropzone=NULL ){$this->set_accesskey( $accesskey );$this->set_multi_bool( $contenteditable, 'contenteditable' );$this->set_contextmenu( $contextmenu );
$this->set_multi_bool( $draggable, 'draggable' );$this->set_multi_bool( $hidden, 'hidden' );$this->set_multi_bool( $spellcheck, 'spellcheck' );$this->set_tabindex( $tabindex );$this->set_title( $title );$this->set_dropzone( $dropzone );}private function set_accesskey( $arg=NULL ){
if( is_string( $arg ) && strlen( $arg ) == 1 ){$arg = ord( $arg );if( ($arg >= 48 && $arg <= 57) || ($arg >= 65 && $arg <= 90) ||($arg >= 97 && $arg <= 122 ) ){$this->accesskey = chr( $arg );}}else{$this->accesskey = NULL;}}private function set_multi_bool( $arg=NULL, $key ){
$arg = strtoupper( $arg );switch( $arg ){case '0':$this->set_multi_key( $key, 0 );break;case '1':$this->set_multi_key( $key, 1 );break;case 'FALSE':$this->set_multi_key( $key, 0 );break;case 'TRUE':$this->set_multi_key( $key, 1 );break;default:
$this->set_multi_key( $key, NULL );}}private function set_multi_key( $k, $a ){switch( $k ){case 'contenteditable':$this->contenteditable = $a;if( $a === NULL ){ $this->contenteditable = NULL; }break;case 'draggable':$this->draggable = $a;if( $a === NULL ){ $this->draggable = NULL; }
break;case 'spellcheck':$this->spellcheck = $a;if( $a === NULL ){ $this->spellcheck = NULL; }case 'hidden':$this->hidden = $a;if( $a === NULL ){ $this->hidden = NULL; }}}private function set_contextmenu( $arg=NULL ){
if( $arg == NULL || strcasecmp( $arg, 'null' ) == 0 ){$this->contextmenu = NULL;}else{$this->contextmenu = $arg;}}private function set_tabindex( $arg=NULL ){if( ctype_digit( $arg ) ){$this->tabindex = $arg;}else{$this->tabindex = NULL;}}private function set_title( $arg=NULL ){if( is_string( $arg ) ){
$this->title = htmlspecialchars( $arg, ENT_QUOTES);}else{$this->title = NULL;}}private function set_dropzone( $arg=NULL ){$arg = strtoupper( $arg );switch( $arg ){case 'copy':$this->dropzone = $arg;break;case 'move':$this->dropzone = $arg;break;case 'link':$this->dropzone = $arg;break;default:
$this->dropzone = NULL;}}
function write_globalattr( $nbr=0 ){$param = NULL;if( $this->accesskey != NULL ){$param = ' accesskey="'.$this->accesskey.'"';}if( $this->contenteditable == 1 ){$param .= ' contenteditable="true"';}elseif( $this->contenteditable == '0' ){
$param .= ' contenteditable="false"';}if( $this->contextmenu != NULL ){$param .= ' contextmenu="'.$this->contextmenu.'"';}if( $this->draggable == 1 ){$param .= ' draggable="true"';}elseif( $this->draggable == '0' ){$param .= ' draggable="false"';}if( $this->hidden == 1 ){
$param .= self::HIDDEN;}if( $this->spellcheck == 1 ){$param .= ' spellcheck="true"';}elseif( $this->spellcheck == '0' ){$param .= ' spellcheck="false"';}if( $this->tabindex != NULL ){$nbr = $this->tabindex+$nbr-1;$param .= ' tabindex="'.$nbr.'"';}
if( $this->title != NULL ){$param .= ' title="'.$this->title.'"';}if( $this->dropzone != NULL ){$param .= ' dropzone="'.$this->title.'"';}return $param;}}?>